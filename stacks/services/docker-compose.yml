---
name: ${PROJECT_NAME}
services:
  kea-db:
    hostname: kea-db.${LOCAL_DOMAIN}
    domainname: ${LOCAL_DOMAIN}
    container_name: kea-db
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "psql -U keadb -d keadb -c 'SELECT version FROM schema_version'"]
    environment:
      POSTGRES_PASSWORD: ${KEA_DB_PASSWORD}
      POSTGRES_USER: ${KEA_DB_USER}
    volumes:
      - kea-db:/var/lib/posgresql
        #      - type: bind
        #source: ./kea-dhcp/initdb
        #target: /docker-entrypoint-initdb.d
    networks:
      kea-backend:

  kea-dhcp4:
    hostname: kea-dhcp4.${LOCAL_DOMAIN}
    domainname: ${LOCAL_DOMAIN}
    container_name: kea-dhcp4
    image: docker.cloudsmith.io/isc/docker/kea-dhcp4:${KEA_VERSION}
    restart: always
    depends_on:  # delay start until database is ready
      kea-db:
        condition: service_healthy
    volumes:
      - kea-conf:/etc/kea
      - kea4-var:/var/lib/kea
    networks:
      net1:  # network that binds container to host network interface.
        ipv4_address: ${KEA_DHCP4_IP}  # ip for kea4 server
      kea-backend:  # internal network for communication with database

  apt-cacher-ng:
    hostname: aptcache.${LOCAL_DOMAIN}
    domainname: ${LOCAL_DOMAIN}
    container_name: apt-cacher-ng
    image: dmbrownlee/apt-cacher-ng:latest
    restart: unless-stopped
    build:
      context: .
      dockerfile: apt-cacher-ng/Dockerfile
    volumes:
      - aptcache-cache:/var/cache/apt-cacher-ng
      - aptcache-log:/var/log/apt-cacher-ng
    dns:
      - ${NS1_IP}
      - ${NS2_IP}
    dns_search: ${LOCAL_DOMAIN}
    networks:
      net1:
        ipv4_address: ${APTCACHE_IP}

  netbootxyz:
    hostname: netbootxyz.${LOCAL_DOMAIN}
    domainname: ${LOCAL_DOMAIN}
    container_name: netbootxyz
    image: ghcr.io/netbootxyz/netbootxyz
    restart: unless-stopped
    environment:
      - MENU_VERSION=2.0.84  # optional
      - NGINX_PORT=80  # optional
      - WEB_APP_PORT=3000  # optional
    volumes:
      - netbootxyz-conf:/config  # optional
      - netbootxyz-assets:/assets  # optional
    dns:
      - ${NS1_IP}
      - ${NS2_IP}
    dns_search: ${LOCAL_DOMAIN}
    networks:
      net1:
        ipv4_address: ${NETBOOT_IP}

  mail:
    hostname: mail.${LOCAL_DOMAIN}
    domainname: ${LOCAL_DOMAIN}
    container_name: mail
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    restart: unless-stopped
    volumes:
      - mail-data:/var/mail/
      - mail-state:/var/mail-state/
      - mail-logs:/var/log/mail/
      - mail-conf:/tmp/docker-mailserver/
      - /etc/localtime:/etc/localtime:ro
    stop_grace_period: 1m
    # Uncomment if using `ENABLE_FAIL2BAN=1`:
    # cap_add:
    #   - NET_ADMIN
    healthcheck:
      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
      timeout: 3s
      retries: 0
    dns:
      - ${NS1_IP}
      - ${NS2_IP}
    dns_search: ${LOCAL_DOMAIN}
    networks:
      net1:
        ipv4_address: ${MAIL_IP}

  homepage:
    hostname: homepage.
    domainname: ${LOCAL_DOMAIN}
    container_name: homepage
    image: ghcr.io/gethomepage/homepage:latest
    restart: unless-stopped
    volumes:
      - homepage-config:/app/config
      - homepage-images:/app/public/images
      - /var/run/docker.sock:/var/run/docker.sock:ro
    dns:
      - ${NS1_IP}
      - ${NS2_IP}
    dns_search: ${LOCAL_DOMAIN}
    networks:
      net1:
        ipv4_address: ${HOMEPAGE_IP}
  
volumes:
  aptcache-cache:
  aptcache-log:
  netbootxyz-conf:
  netbootxyz-assets:
  mail-data:
  mail-state:
  mail-logs:
  mail-conf:
  homepage-config:
  homepage-images:
  kea-conf:
  kea-db:
  kea4-var:

networks:
  net1:
    external: true
    name: ${LAN_NAME}
  kea-backend:
